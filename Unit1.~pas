unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ComObj;
const
xlCellTypeLastCell = $0000000B;
type
  TForm1 = class(TForm)
    Button1: TButton;
    OpenDialog1: TOpenDialog;
    SaveDialog1: TSaveDialog;
    procedure Button1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
var
//счетчик для перебора строк
i:integer;
//счетчик для перебора столбцов
j:integer;
//переменная ссылка на объект Excel
PExelObj:variant;
//Переменная ссылка на книгу
PExelBookCurrent:variant;
//переменая ссылка на активную книгу
PExelBookActive:variant;
//Переменная ссылка на активный лист
PExelSheetActive:variant;
//максимальное количество рядов и колонок на проверяемом листе
maxRow,maxCol:integer;
//строковая переменная для сохранение необходимой строки перезаписи
currentStr:string;
sss:string;
begin
//Создание оъекта Excel.Application. Объект Excel.
PExelObj:=CreateOleObject('Excel.Application');
//сделаем окно приложения Excel невидимым для увеличения скорости работы
PExelObj.Visible:=false;
//Откроем Excel файл который нужно дополнить.
if OpenDialog1.Execute then PExelObj.WorkBooks.Open(OpenDialog1.FileName);
PExelBookCurrent:=PExelObj.WorkBooks;
//получаем доступ к последней открытой книге. Делаем её активной.
PExelBookCurrent.Item[PExelObj.WorkBooks.Count].Activate;
//получение ссылки на активную книгу.
PExelBookActive:=PExelBookCurrent.Item[PExelObj.WorkBooks.Count];
//Получение ссылки на первый лист активной книги
PExelSheetActive:=PExelBookActive.Sheets.Item[1];

//активируем последнюю ячейку на активном листе.
PExelSheetActive.Cells.SpecialCells(xlCellTypeLastCell, EmptyParam).Activate;
//максимальное количество строк . Метод ActiveCell подразумевает работу с объектом Excel
maxRow:=PExelObj.ActiveCell.Row;
//максимальное количество столбцов
maxCol:=PExelObj.ActiveCell.Column;
//производим запись в необходимую ячейку
PExelSheetActive.Cells[1,maxCol+1]:='Входит в'; {[i,j]}

//непосредственно алгоритм разбора и исправлений
for i:=2 to maxRow do
  begin
    for j:=1 to maxCol do
      begin
        sss:='';

        //проверяем 3,4,5,6,7 ячейки в строке
        if ( (PExelSheetActive.Cells[i,3].Text=sss)and(PExelSheetActive.Cells[i,4].Text=sss)and(PExelSheetActive.Cells[i,5].Text=sss)and(PExelSheetActive.Cells[i,6].Text=sss) ) then
          begin
            currentStr:=PExelSheetActive.Cells[i,1];
          end
        else
          begin
            PExelSheetActive.Cells[i,maxCol+1]:=currentStr;
          end;
      end;
  end;

//сохранение активной книги под новым именем
if SaveDialog1.Execute then
  begin
    //можно сохранить
    PExelBookActive.SaveAs(form1.SaveDialog1.FileName+'.xslx'{ExtractFileDir(ParamStr(0))+'/ReExcel.xlsx'});
    showMessage('Преобразование завершено успешно!');
    //закрытие активной книги
    PExelBookActive.Close;
    //закрытие приложения Excel
    PExelObj.Application.Quit;
    PExelObj:=Unassigned;
    halt;
  end
else
  begin
    showMessage('Преобразование завершено не успешно!');
    //закрытие активной книги
    PExelBookActive.Close;
    halt;
  end;
end;

end.
